<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Foodiefeed.BoardPage"
             Background="White"
             x:Name="Page"
             xmlns:local="clr-namespace:Foodiefeed;assembly=Foodiefeed"
             xmlns:viewmodel="clr-namespace:Foodiefeed.viewmodels"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:views="clr-namespace:Foodiefeed.views.windows.contentview"
             xmlns:popup="clr-namespace:Foodiefeed.views.windows.popups"
             >
    <ContentPage.Resources>
        <local:AdjustPostSpace x:Key="AdjustPostSpace"/>
        <local:FollowOrNotFollowConverter x:Key="FollowOrNotFollowConverter"/>
        <x:Double x:Key="NoNotificationsHeightAdjustValue">100</x:Double>
        <x:Double x:Key="LeftBarHeightAdjustValue">170</x:Double>
        <x:Double x:Key="MidBarWidthAdjustValue">600</x:Double>
        <x:Double x:Key="MidBarHeightAdjustValue">100</x:Double>
        <x:Double x:Key="PostCollectionViewAdjustValue">160</x:Double>
        <x:Double x:Key="RightBarHeightAdjustValue">100</x:Double>
        <x:Double x:Key="BorderWidthValueAdjustment">-20</x:Double>
        <x:Double x:Key="PostWidthValueAdjustment">750</x:Double>
        <local:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <local:Base64ToImageSourceConverter x:Key="Base64ToImageSourceConverter" />

        <DataTemplate x:Key="FriendRequestNotificationTemplate">
            <views:FriendRequestNotification Message="{Binding Message}" UserId="{Binding UserId}" ImageBase64="{Binding ImageBase64}"/>
        </DataTemplate>

        <DataTemplate x:Key="CommentLikeNotificationTemplate">
            <views:CommentLikeNotification Message="{Binding Message}" UserId="{Binding UserId}" CommentId="{Binding CommentId}" ImageBase64="{Binding ImageBase64}"/>
        </DataTemplate>

        <DataTemplate x:Key="PostLikeNotificationTemplate">
            <views:PostLikeNotification Message="{Binding Message}" UserId="{Binding UserId}" ImageBase64="{Binding ImageBase64}"/>
        </DataTemplate>

        <DataTemplate x:Key="PostCommentNotificationTemplate">
            <views:PostCommentNotification Message="{Binding Message}" UserId="{Binding UserId}" PostId="{Binding PostId}" CommentId="{Binding CommentId}" ImageBase64="{Binding ImageBase64}"/>
        </DataTemplate>

        <DataTemplate x:Key="BasicNotificationTemplate">
            <views:BasicNotofication Message="{Binding Message}" UserId="{Binding UserId}" ImageBase64="{Binding ImageBase64}"/>
        </DataTemplate>

        <local:NotificationTemplateSelector x:Key="NotificationTemplateSelector"
                                            FriendRequestNotificationTemplate="{StaticResource FriendRequestNotificationTemplate}"
                                            CommentLikeNotificationTemplate="{StaticResource CommentLikeNotificationTemplate}"
                                            PostLikeNotificationTemplate="{StaticResource PostLikeNotificationTemplate}"
                                            PostCommentNotificationTemplate="{StaticResource PostCommentNotificationTemplate}"
                                            BasicNotificationTemplate="{StaticResource BasicNotificationTemplate}"/>
    </ContentPage.Resources>
    
    <ContentPage.Behaviors>
        <toolkit:EventToCommandBehavior Command="{Binding AppearingCommand}" EventName="Appearing" />
    </ContentPage.Behaviors>
    
    <Grid>

        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="100"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid ZIndex="10" Grid.Row="0">
                <BoxView Color="{DynamicResource MainBackgroundColor}" 
                          WidthRequest="{Binding Source={x:Reference Page},Path=Width}" 
                          HeightRequest="100" 
                          VerticalOptions="Start">
                    <BoxView.Shadow>
                        <Shadow Opacity="0.8"/>
                    </BoxView.Shadow>
                </BoxView>

                <ImageButton Source="{DynamicResource LogoPath}" 
                             HeightRequest="50" 
                             WidthRequest="50" 
                             VerticalOptions="Start" 
                             HorizontalOptions="Start" 
                             Margin="20"
                             BackgroundColor="Transparent"/>
                
                <Border Margin="0,20,0,0" 
                        VerticalOptions="Start" 
                        Stroke="Gray" 
                        StrokeThickness="1.5" 
                        StrokeShape="RoundRectangle 20,20,20,20" 
                        HeightRequest="50" 
                        WidthRequest="420">
                    <Grid BackgroundColor="{DynamicResource EntryBackround}">
                        <Entry TextColor="{DynamicResource TextColor}" 
                               FontSize="18" 
                               Placeholder="Search" 
                               Margin="0" 
                               HeightRequest="40" 
                               WidthRequest="400" 
                               Text="{Binding SearchParam,Mode=TwoWay}"
                               x:Name="SearchEntry"
                               BackgroundColor="Transparent"
                               >
                            <Entry.Behaviors>
                                <toolkit:EventToCommandBehavior EventName="Focused" Command="{Binding ShowSearchPanelCommand}"/>
                                <toolkit:EventToCommandBehavior EventName="Unfocused" Command="{Binding HideSearchPanelCommand}"/>
                                <toolkit:EventToCommandBehavior EventName="TextChanged" Command="{Binding SearchCommand}"/>
                            </Entry.Behaviors>
                            <Entry.GestureRecognizers>
                                <PointerGestureRecognizer PointerEnteredCommand="{Binding SetSearchPanelVisibilityToTrueCommand}"
                                                          PointerExitedCommand="{Binding SetSearchPanelVisibilityToFalseCommand}"/>
                            </Entry.GestureRecognizers>
                        </Entry>
                        <!--<ImageButton Source="microphone.png" Scale="0.5" HorizontalOptions="End" Command="{Binding SearchByVoiceCommand}" BackgroundColor="Transparent"/>-->
                        <!--<Grid.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding ShowSearchPanelCommand}" />
                        </Grid.GestureRecognizers>-->
                    </Grid>
                </Border>

                
                <Border HorizontalOptions="Start" Margin="100,0,0,0" StrokeShape="RoundRectangle 5" BackgroundColor="#80808080" WidthRequest="42" HeightRequest="42">
                    <Grid BackgroundColor="{DynamicResource MainBackgroundColor}" WidthRequest="41" HeightRequest="41">
                        <VerticalStackLayout Spacing="4" VerticalOptions="Center">
                            <BoxView BackgroundColor="Gray" WidthRequest="22" HeightRequest="3" Opacity="0.8" CornerRadius="50"/>
                            <BoxView BackgroundColor="Gray" WidthRequest="22" HeightRequest="3" Opacity="0.8" CornerRadius="50"/>
                            <BoxView BackgroundColor="Gray" WidthRequest="22" HeightRequest="3" Opacity="0.8" CornerRadius="50"/>
                        </VerticalStackLayout>
                        <Grid.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding ShowHubPanelCommand}"/>
                        </Grid.GestureRecognizers>
                    </Grid>
                    <Border.Shadow>
                        <Shadow Opacity="0.4" Brush="Black"/>
                    </Border.Shadow>
                </Border>

                <HorizontalStackLayout HorizontalOptions="End">
                    <BoxView WidthRequest="200" BackgroundColor="MediumPurple" HeightRequest="30" VerticalOptions="Center" Margin="100,0,0,0"></BoxView>
                </HorizontalStackLayout>

            </Grid>

            <Grid Padding="0,0,0,0"  Grid.Row="1">
                <!--left for some pages buttons or custom flyout | middle for posts | left for friends-->

                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0">
                    <VerticalStackLayout BackgroundColor="{DynamicResource SideBackgroundColor}" 
                                         IsVisible="{Binding NoNotificationNotifierVisible,Converter={StaticResource InverseBooleanConverter}}">

                        <HorizontalStackLayout BackgroundColor="{DynamicResource SideBackgroundColor}" 
                                               Spacing="5" 
                                               Padding="10"
                                               HeightRequest="70">
                            <Label Text="Notfications" TextColor="{DynamicResource TextColor}" FontAttributes="Bold" FontSize="30" />
                            <Button Text="Clear" Background="{DynamicResource MainBackgroundColor}" 
                                    TextColor="{DynamicResource TextColor}" 
                                    Scale="0.7" 
                                    WidthRequest="100"
                                    FontSize="15"
                                    Command="{Binding ClearNotificationsCommand}">
                                <Button.Shadow>
                                    <Shadow Opacity="0.3" Brush="{DynamicResource TextColor}"/>
                                </Button.Shadow>
                            </Button>
                        </HorizontalStackLayout>
                        <Grid   HorizontalOptions="Start" 
                                VerticalOptions="Start" 
                                x:Name="hubScroll" 
                                BackgroundColor="Transparent"
                                WidthRequest="300" 
                                HeightRequest="{Binding Source={x:Reference Page},Path=Height,Converter={StaticResource AdjustPostSpace},ConverterParameter={StaticResource LeftBarHeightAdjustValue}}" >
                            <!--pages-->
                            <Grid BackgroundColor="Transparent" Padding="0,10,0,10">
                                <!--<CollectionView ItemTemplate="{StaticResource NotificationTemplateSelector}" 
                                                ItemsSource="{Binding Notifications}" 
                                                BackgroundColor="Transparent"
                                                VerticalScrollBarVisibility="Always"
                                                ItemsUpdatingScrollMode="KeepScrollOffset"
                                                RemainingItemsThreshold="10"
                                                RemainingItemsThresholdReachedCommand="{Binding NotificationsThresholdExeedCommand}">
                                    <CollectionView.ItemsLayout>
                                        <LinearItemsLayout Orientation="Vertical" ItemSpacing="5"/>
                                    </CollectionView.ItemsLayout>
                                </CollectionView>-->
                                <CollectionView ItemTemplate="{StaticResource NotificationTemplateSelector}" 
                                                ItemsSource="{Binding Notifications}" 
                                                BackgroundColor="Transparent"
                                                VerticalScrollBarVisibility="Always"
                                                ItemsUpdatingScrollMode="KeepScrollOffset"
                                                RemainingItemsThreshold="10"
                                                RemainingItemsThresholdReachedCommand="{Binding NotificationsThresholdExeedCommand}"
                                                >
                                    <CollectionView.ItemsLayout>
                                        <LinearItemsLayout Orientation="Vertical" ItemSpacing="5"/>
                                    </CollectionView.ItemsLayout>
                                </CollectionView>
                            </Grid>
                        </Grid>
                    </VerticalStackLayout>
                    
                    <Grid IsVisible="{Binding NoNotificationNotifierVisible}"
                          HorizontalOptions="Start" 
                          VerticalOptions="Start"
                          BackgroundColor="{DynamicResource SideBackgroundColor}"
                          WidthRequest="300"
                          Margin="0,0,0,0"
                          HeightRequest="{Binding Source={x:Reference Page},Path=Height,Converter={StaticResource AdjustPostSpace},ConverterParameter={StaticResource NoNotificationsHeightAdjustValue}}" >
                        <VerticalStackLayout VerticalOptions="Center" >
                            <Image Source="notificationicon.png" HeightRequest="40" WidthRequest="40" HorizontalOptions="Center"/>
                            <Label TextColor="#afafaf" Text="No notification yet" HorizontalOptions="Center"/>
                        </VerticalStackLayout>
                    </Grid>
                    <!--<a target="_blank" href="https://icons8.com/icon/83193/notification">Notification</a> icon by
                    <a target="_blank" href="https://icons8.com">Icons8</a>-->
                </Grid>


                <!--PostGrid-->
                <ScrollView Grid.Column="1"
                            IsVisible="{Binding PostPageVisible,Converter={StaticResource InverseBooleanConverter}}"
                            BackgroundColor="{DynamicResource MainBackgroundColor}"
                            WidthRequest="{Binding Source={x:Reference Page},Path=Width,Converter={StaticResource AdjustPostSpace},ConverterParameter={StaticResource MidBarWidthAdjustValue}}">

                    <Grid>
                        <Grid x:Name="ProfileGrid" IsVisible="{Binding ProfilePageVisible}" BackgroundColor="{DynamicResource MainBackgroundColor}" Padding="30">
                            <VerticalStackLayout>
                                <Border ZIndex="1" 
                                        MaximumWidthRequest="1000" 
                                        VerticalOptions="Start" 
                                        HeightRequest="300" 
                                        BackgroundColor="{DynamicResource MainBackgroundColor}"
                                        StrokeShape="RoundRectangle 40">
                                    <Grid  Padding="15"  
                                           BackgroundColor="{DynamicResource MainBackgroundColor}" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <ImageButton Grid.Column="0"
                                                     BackgroundColor="{DynamicResource MainBackgroundColorContrast}"
                                                     CornerRadius="100"
                                                     HeightRequest="200" 
                                                     WidthRequest="200"  
                                                     Source="{Binding AvatarBase64,Converter={StaticResource Base64ToImageSourceConverter}}" 
                                                     Aspect="AspectFill"
                                                     BorderWidth="1"
                                                     BorderColor="{DynamicResource TextColor}"/>
                                        <VerticalStackLayout Padding="5" 
                                                             VerticalOptions="Center" 
                                                             BackgroundColor="Transparent" 
                                                             Grid.Column="1">

                                            <Label Text="{Binding ProfileUsername}" 
                                                   TextColor="{DynamicResource TextColor}" 
                                                   FontSize="30" 
                                                   FontAttributes="Bold"/>

                                            <Label Text="{Binding ProfileFriends}" 
                                                   TextColor="{DynamicResource TextColor}"
                                                   FontSize="15" 
                                                   Margin="4,0,0,0"/>

                                            <Label Text="{Binding ProfileFollowers}" 
                                                   TextColor="{DynamicResource TextColor}" 
                                                   FontSize="15" 
                                                   Margin="4,0,0,0"/>
                                        </VerticalStackLayout>

                                        <HorizontalStackLayout IsVisible="{Binding ProfileAddFriendAndFollowButtonsVisible}"
                                                               HorizontalOptions="End" 
                                                               VerticalOptions="Center"
                                                               Padding="10" 
                                                               Grid.Column="2">
                                            <Button FontAttributes="Bold" 
                                                    Text="Send friend request" 
                                                    BackgroundColor="#e0e0e0" 
                                                    Margin="0,0,10,0">
                                                <Button.Shadow>
                                                    <Shadow Opacity="0.4"
                                                            Radius="10"/>
                                                </Button.Shadow>
                                                <Button.GestureRecognizers>
                                                    <PointerGestureRecognizer PointerEntered="ScaleButtonSizeAnimation" 
                                                                              PointerExited="CondenseButtonSizeAnimation"/>
                                                </Button.GestureRecognizers>
                                            </Button>

                                            <Button FontAttributes="Bold" 
                                                    Text="Follow" 
                                                    BackgroundColor="#e32441" 
                                                    Margin="0,0,10,0">
                                                <Button.Shadow>
                                                    <Shadow Opacity="0.4"
                                                            Radius="10"/>
                                                </Button.Shadow>
                                                <Button.GestureRecognizers>
                                                    <PointerGestureRecognizer PointerEntered="ScaleButtonSizeAnimation" 
                                                                              PointerExited="CondenseButtonSizeAnimation"/>
                                                </Button.GestureRecognizers>
                                            </Button>

                                        </HorizontalStackLayout>
                                    </Grid>
                                    <Border.Shadow>
                                        <Shadow Opacity="0.5"
                                                Radius="10"/>
                                    </Border.Shadow>

                                </Border>

                                <Border Margin="0,-40,0,0" 
                                        ZIndex="0" 
                                        BackgroundColor="{DynamicResource ProfileOptionsSection}" 
                                        MaximumWidthRequest="1000" 
                                        VerticalOptions="Start" 
                                        HeightRequest="125"  
                                        StrokeShape="RoundRectangle 0,0,40,40">
                                    <Grid Padding="15">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>

                                        <Grid Padding="5" 
                                              VerticalOptions="End"  
                                              Grid.Column="0">
                                            <Button Command="{Binding ShowProfilePostsCommand}" 
                                                    Text="Post" 
                                                    HeightRequest="40" 
                                                    FontAttributes="Bold" 
                                                    FontSize="20"
                                                    TextColor="{DynamicResource TextColor}"
                                                    BackgroundColor="{Binding SelfPostButtonColor}">
                                                <Button.Shadow>
                                                    <Shadow Opacity="0.4" 
                                                            Radius="5"/>
                                                </Button.Shadow>
                                            </Button>
                                        </Grid>

                                        <Grid Padding="5" 
                                              VerticalOptions="End" 
                                              Grid.Column="1" >
                                            <Button Command="{Binding ShowProfileFriendsCommand}" 
                                                    Text="Friends" 
                                                    HeightRequest="40" 
                                                    FontAttributes="Bold" 
                                                    FontSize="20"
                                                    TextColor="{DynamicResource TextColor}"
                                                    BackgroundColor="{Binding FriendsButtonColor}">
                                                <Button.Shadow>
                                                    <Shadow Opacity="0.4" 
                                                            Radius="5"/>
                                                </Button.Shadow>
                                            </Button>
                                        </Grid>

                                        <Grid Padding="5" VerticalOptions="End" Grid.Column="2" >
                                            <Button Command="{Binding ShowProfileFollowersCommand}" 
                                                    Text="Followers" 
                                                    HeightRequest="40" 
                                                    FontAttributes="Bold" 
                                                    FontSize="20" 
                                                     TextColor="{DynamicResource TextColor}"
                                                    BackgroundColor="{Binding FollowersButtonColor}">
                                                <Button.Shadow>
                                                    <Shadow Opacity="0.4" Radius="5"/>
                                                </Button.Shadow>
                                            </Button>
                                        </Grid>

                                    </Grid>
                                    <Border.Shadow>
                                        <Shadow Opacity="0.4" Brush="Black"/>
                                    </Border.Shadow>
                                </Border>

                                <VerticalStackLayout x:Name="ProfileSection">
                                    <Border IsVisible="{Binding ProfileFriendsVisible}" 
                                            x:Name="FriendsUniformGridBorder"
                                            Margin="0,50,0,0" 
                                            BackgroundColor="{DynamicResource ProfileOptionsSection}" 
                                            StrokeShape="RoundRectangle 40,40,40,40" 
                                            MaximumWidthRequest="1200">

                                        <toolkit:UniformItemsLayout MaxColumns="3"
                                                                    BackgroundColor="Transparent" 
                                                                    HeightRequest="1000" 
                                                                    Padding="20" 
                                                                    BindableLayout.ItemsSource="{Binding ProfileFriendsList}" 
                                                                    x:Name="FriendsUniformGrid">
                                            <BindableLayout.ItemTemplate>
                                                <DataTemplate>
                                                    <views:OnListFriendView Username="{Binding Username}"
                                                                            AvatarImageSource="{Binding AvatarImageSource}"
                                                                            UserId="{Binding UserId}"
                                                                            Margin="0,5"/>
                                                </DataTemplate>
                                            </BindableLayout.ItemTemplate>
                                        </toolkit:UniformItemsLayout>
                                        <Border.Shadow>
                                            <Shadow Opacity="0.4" Brush="Black"/>
                                        </Border.Shadow>
                                    </Border>

                                    <StackLayout Orientation="Vertical" 
                                                 x:Name="ProfilePostGrid" 
                                                 IsVisible="{Binding ProfilePostsVisible}" 
                                                 BindableLayout.ItemsSource="{Binding ProfilePosts}">
                                        <BindableLayout.ItemTemplate>
                                            <DataTemplate>
                                                <views:PostView Username="{Binding Username}"
                                                                TimeStamp="{Binding TimeStamp}"
                                                                PostTextContent="{Binding PostTextContent}"
                                                                PostLikeCount="{Binding PostLikeCount}"
                                                                ImageSource="{Binding ImageSource}"
                                                                ImagesBase64="{Binding ImagesBase64}"
                                                                PfpImageBase64="{Binding PfpImageBase64}"
                                                                PostId="{Binding PostId}"
                                                                NewCommentContent="{Binding NewCommentContent}"
                                                                Payload="{Binding Payload}"
                                                                DeleteButtonVisible="{Binding DeleteButtonVisible}"
                                                                PostProducts="{Binding PostProducts}"
                                                                PostContentVisible="{Binding PostContentVisible}"/>
                                            </DataTemplate>
                                        </BindableLayout.ItemTemplate>
                                    </StackLayout>

                                    <Border IsVisible="{Binding ProfileFollowersVisible}" 
                                            Margin="0,50,0,0" 
                                            BackgroundColor="{DynamicResource ProfileOptionsSection}" 
                                            StrokeShape="RoundRectangle 40,40,40,40" 
                                            MaximumWidthRequest="1200">
                                        <toolkit:UniformItemsLayout MaxColumns="3" 
                                                                    BackgroundColor="Transparent" 
                                                                    HeightRequest="1000"
                                                                    Padding="20" 
                                                                    BindableLayout.ItemsSource="{Binding ProfileFollowersList}">
                                            <BindableLayout.ItemTemplate>
                                                <DataTemplate>
                                                    <views:OnListFriendView Username="{Binding Username}"
                                                                            AvatarImageSource="{Binding AvatarImageSource}"
                                                                            UserId="{Binding UserId}"
                                                                            Margin="0,5"/>
                                                </DataTemplate>
                                            </BindableLayout.ItemTemplate>
                                        </toolkit:UniformItemsLayout>
                                        <Border.Shadow>
                                            <Shadow Opacity="0.4" Brush="Black"/>
                                        </Border.Shadow>
                                    </Border>

                                    <Grid VerticalOptions="Center" HorizontalOptions="Center">

                                        <VerticalStackLayout Margin="0,100,0,0">
                                            <Label TextColor="{DynamicResource TextColor}" 
                                                   Text="Loading..." 
                                                   IsVisible="{Binding LoadingLabelVisible}"/>
                                            <ActivityIndicator IsRunning="True" IsVisible="{Binding LoadingLabelVisible}"/>
                                        </VerticalStackLayout>

                                        <Label Text="This user has not posts yet." 
                                               FontSize="30" 
                                               TextColor="{DynamicResource TextColor}"
                                               IsVisible="{Binding NoPostOnProfile}"/>
                                    </Grid>
                                </VerticalStackLayout>
                            </VerticalStackLayout>
                        </Grid>
                       

                        <Grid IsVisible="{Binding SettingsPageVisible}" Padding="40">
                            <Border BackgroundColor="{DynamicResource MainBackgroundColor}" StrokeShape="RoundRectangle 40" MaximumWidthRequest="1000">

                                <Grid BackgroundColor="{DynamicResource MainBackgroundColor}" Padding="20">

                                    <Grid x:Name="settingsOptionsGrid" IsVisible="{Binding SettingsMainHubVisible}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>


                                        <VerticalStackLayout Grid.Column="0" Spacing="10">
                                            <Button Text="Change personal data" HorizontalOptions="Center" Clicked="Button_Clicked" Command="{Binding OpenPersonalDataEditorCommand}"/>
                                            <Label Text="Change Theme" TextColor="{DynamicResource TextColor}" HorizontalOptions="Center"/>
                                        </VerticalStackLayout>
                                        <VerticalStackLayout Grid.Column="1" Spacing="10" Margin="0,10,0,0">
                                            <Label Text="Click to change your personal data" TextColor="{DynamicResource TextColor}" HorizontalOptions="Center"/>
                                            <HorizontalStackLayout Spacing="5" HorizontalOptions="Center">
                                                <Switch Scale="1.5">
                                                    <Switch.Behaviors>
                                                        <toolkit:EventToCommandBehavior 
                                                                        EventName="Toggled" 
                                                                        Command="{Binding ChangeThemeCommand}"/>
                                                    </Switch.Behaviors>
                                                </Switch>
                                                <Label TextColor="{DynamicResource TextColor}" Text="{Binding SwitchThemeMode,Mode=TwoWay}" VerticalOptions="Center"/>
                                            </HorizontalStackLayout>
                                        </VerticalStackLayout>

                                    </Grid>

                                    <Grid x:Name="changePersonalDataGrid" IsVisible="{Binding PersonalDataEditorVisible}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="200"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Border Grid.Column="0" StrokeShape="RoundRectangle 30" BackgroundColor="Gray" StrokeThickness="2">
                                            <VerticalStackLayout Spacing="40"  BackgroundColor="{DynamicResource MainBackgroundColor}" Padding="20">

                                                <Button Text="Change Username" 
                                                        BackgroundColor="Transparent"
                                                        TextColor="{DynamicResource TextColor}"
                                                        FontAttributes="Bold"
                                                        Command="{Binding ShowChangeUsernameEntryCommand}">
                                                    <Button.Shadow>
                                                        <Shadow Opacity="0.4"
                                                                Radius="10"
                                                                Brush="{DynamicResource TextColor}"/>
                                                    </Button.Shadow>
                                                    <Button.GestureRecognizers>
                                                        <PointerGestureRecognizer PointerEntered="OptionButtonScaleAnimation" PointerExited="OptionButtonDescendAnimation"/>
                                                    </Button.GestureRecognizers>
                                                </Button>

                                                <Button Text="Change Email" 
                                                        BackgroundColor="Transparent"
                                                        TextColor="{DynamicResource TextColor}"
                                                        FontAttributes="Bold"
                                                        Command="{Binding ShowChangeEmialEntryCommand}">
                                                    <Button.Shadow>
                                                        <Shadow Opacity="0.4"
                                                                Radius="10"
                                                                Brush="{DynamicResource TextColor}"/>
                                                    </Button.Shadow>
                                                    <Button.GestureRecognizers>
                                                        <PointerGestureRecognizer PointerEntered="OptionButtonScaleAnimation" PointerExited="OptionButtonDescendAnimation"/>
                                                    </Button.GestureRecognizers>
                                                </Button>

                                                <Button Text="Change Password" 
                                                        BackgroundColor="Transparent"
                                                        TextColor="{DynamicResource TextColor}"
                                                        FontAttributes="Bold"
                                                        Command="{Binding ShowChangePasswordEntryCommand}">
                                                    <Button.Shadow>
                                                        <Shadow Opacity="0.4"
                                                                Radius="10"
                                                                Brush="{DynamicResource TextColor}"/>
                                                    </Button.Shadow>
                                                    <Button.GestureRecognizers>
                                                        <PointerGestureRecognizer PointerEntered="OptionButtonScaleAnimation" PointerExited="OptionButtonDescendAnimation"/>
                                                    </Button.GestureRecognizers>
                                                </Button>

                                                <Button Text="Change Profile Picture"  
                                                        BackgroundColor="Transparent" 
                                                        HorizontalOptions="CenterAndExpand"
                                                        TextColor="{DynamicResource TextColor}"
                                                        FontAttributes="Bold" 
                                                        LineBreakMode="WordWrap"
                                                        Command="{Binding ChangeProfilePictureCommand}">
                                                    <Button.Shadow>
                                                        <Shadow Opacity="0.4"
                                                                Radius="10"
                                                                Brush="{DynamicResource TextColor}"/>
                                                    </Button.Shadow>
                                                    <Button.GestureRecognizers>
                                                        <PointerGestureRecognizer PointerEntered="OptionButtonScaleAnimation" PointerExited="OptionButtonDescendAnimation"/>
                                                    </Button.GestureRecognizers>
                                                </Button>



                                            </VerticalStackLayout>
                                        </Border>

                                        <Grid Grid.Column="1" BackgroundColor="{DynamicResource MainBackgroundColor}" Padding="20">
                                            <!--<VerticalStackLayout Spacing="10" Padding="20" VerticalOptions="Center"  BackgroundColor="Blue">-->

                                            <Border Stroke="Gray" 
                                                    StrokeThickness="1.5" 
                                                    StrokeShape="RoundRectangle 20,20,20,20" 
                                                    HeightRequest="60" WidthRequest="370"
                                                    IsVisible="{Binding ChangeUsernameEntryVisible}"
                                                    BackgroundColor="{DynamicResource EntryBackround}">

                                                <Entry TextColor="{DynamicResource NotificationButtonTextColor}" 
                                                       FontSize="18"
                                                       Placeholder="Username" 
                                                       Margin="0" 
                                                       x:Name="newUsernameEntry" 
                                                       HeightRequest="50" 
                                                       WidthRequest="350" 
                                                       BackgroundColor="Transparent"
                                                       PlaceholderColor="Gray"
                                                       Text="{Binding ChangedUsername}">
                                                </Entry>
                                            </Border>

                                            <Border Stroke="Gray" 
                                                     StrokeThickness="1.5" 
                                                     StrokeShape="RoundRectangle 20,20,20,20" 
                                                     HeightRequest="60" WidthRequest="370"
                                                     IsVisible="{Binding ChangeEmailEntryVisible}"
                                                     BackgroundColor="{DynamicResource EntryBackround}">
                                                <Entry 
                                                    TextColor="{DynamicResource NotificationButtonTextColor}" 
                                                    FontSize="18"
                                                    Placeholder="E-mial" 
                                                    Margin="0" 
                                                    x:Name="newEmailEntry" 
                                                    HeightRequest="50" 
                                                    WidthRequest="350" 
                                                    BackgroundColor="Transparent"
                                                    PlaceholderColor="Gray"
                                                    Text="{Binding ChangedEmail}">
                                                </Entry>
                                            </Border>
                                            <VerticalStackLayout Spacing="10" VerticalOptions="Center">


                                                <Border Stroke="Gray" 
                                                     StrokeThickness="1.5" 
                                                     StrokeShape="RoundRectangle 20,20,20,20" 
                                                     HeightRequest="60" WidthRequest="370"
                                                     IsVisible="{Binding ChangePasswordEntryVisible}"
                                                     BackgroundColor="{DynamicResource EntryBackround}">

                                                    <Entry TextColor="{DynamicResource NotificationButtonTextColor}" 
                                                        FontSize="18"
                                                        Placeholder="Password" 
                                                        IsPassword="True"
                                                        Margin="0" 
                                                        x:Name="newPasswordEntry" 
                                                        HeightRequest="50" 
                                                        WidthRequest="350" 
                                                        BackgroundColor="Transparent"
                                                        PlaceholderColor="Gray"
                                                        Text="{Binding ChangedPassword}">
                                                    </Entry>
                                                </Border>

                                                <Border Stroke="Gray" 
                                                         StrokeThickness="1.5" 
                                                         StrokeShape="RoundRectangle 20,20,20,20" 
                                                         HeightRequest="60" WidthRequest="370"
                                                         IsVisible="{Binding ChangePasswordEntryVisible}"
                                                         BackgroundColor="{DynamicResource EntryBackround}">
                                                    <Entry TextColor="{DynamicResource NotificationButtonTextColor}" 
                                                            FontSize="18"
                                                            Placeholder="Retype Password" 
                                                            IsPassword="True"
                                                            Margin="0" 
                                                            x:Name="newRePasswordEntry" 
                                                            HeightRequest="50" 
                                                            WidthRequest="350" 
                                                            BackgroundColor="Transparent"
                                                            PlaceholderColor="Gray"
                                                            Text="{Binding ChangedRePassword}">
                                                    </Entry>
                                                </Border>
                                            </VerticalStackLayout>

                                            <Grid IsVisible="{Binding ChangeProfilePictureVisible}" Padding="50">
                                                <Border  Stroke="Gray" 
                                                         StrokeThickness="0.5" 
                                                         StrokeShape="RoundRectangle 20"                                                                                       
                                                         BackgroundColor="{DynamicResource EntryBackround}">

                                                    <VerticalStackLayout VerticalOptions="Center" 
                                                                         Spacing="10">
                                                        <Border StrokeThickness="0" 
                                                                StrokeShape="RoundRectangle 150" 
                                                                HeightRequest="250"  
                                                                WidthRequest="250" 
                                                                BackgroundColor="{DynamicResource MainBackgroundColorContrast}">
                                                            <Image Source="{Binding ChangedImageProfilePicturePath}" 
                                                                   HeightRequest="250"  
                                                                   WidthRequest="250" 
                                                                   Aspect="AspectFill"/>


                                                        </Border>
                                                        <Button Command="{Binding ChooseNewProfilePictureCommand}" 
                                                                Text="Choose image..."></Button>
                                                    </VerticalStackLayout>
                                                </Border>

                                            </Grid>

                                            <HorizontalStackLayout HorizontalOptions="End" 
                                                                   VerticalOptions="End" 
                                                                   Spacing="10">
                                                <Button Text="Save Changes" 
                                                        BackgroundColor="#e0e0e0" 
                                                        VerticalOptions="Center"
                                                        Command="{Binding SaveChangedPersonalDataCommand}">
                                                    <Button.Shadow>
                                                        <Shadow Opacity="0.4"
                                                                Radius="10"/>
                                                    </Button.Shadow>
                                                </Button>
                                            </HorizontalStackLayout>
                                            <Button Text="←"
                                                    Clicked="Button_Clicked" 
                                                    TextColor="{DynamicResource TextColor}" 
                                                    BackgroundColor="Transparent"
                                                    Margin="0,-25,0,0" 
                                                    FontSize="30" 
                                                    VerticalOptions="Start" 
                                                    HorizontalOptions="End" 
                                                    Command="{Binding OpenSettingsLandingPageCommand}"/>
                                            <!--</VerticalStackLayout>-->
                                        </Grid>
                                    </Grid>
                                </Grid>
                                <Border.Shadow>
                                    <Shadow Opacity="0.5"
                                            Radius="5"/>
                                </Border.Shadow>
                            </Border>
                        </Grid>
                    </Grid>

                </ScrollView>

                <Grid Grid.Column="1">
                    <VerticalStackLayout IsVisible="{Binding PostPageVisible}"
                                         BackgroundColor="{DynamicResource MainBackgroundColor}"
                                         WidthRequest="{Binding Source={x:Reference Page},Path=Width,Converter={StaticResource AdjustPostSpace},ConverterParameter={StaticResource MidBarWidthAdjustValue}}">

                        <Frame BackgroundColor="{DynamicResource MainBackgroundColorContrast}" 
                               HeightRequest="60" 
                               Margin="0,5,0,0" 
                               BorderColor="Transparent" 
                               HasShadow="True" Padding="5">
                            <HorizontalStackLayout>
                                <Frame Padding="0" 
                                       BackgroundColor="{DynamicResource MainBackgroundColor}">
                                    <Label Text="Add Post" TextColor="{DynamicResource TextColor}" 
                                           HorizontalOptions="Center" VerticalOptions="Center"/>
                                    <Frame.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding ShowAddPostFormCommand}"/>
                                    </Frame.GestureRecognizers>
                                </Frame>
                            </HorizontalStackLayout>
                        </Frame>
                        <CollectionView ItemsSource="{Binding Posts}"
                                        RemainingItemsThreshold="5"
                                        VerticalScrollBarVisibility="Always"
                                        ItemsUpdatingScrollMode="KeepScrollOffset"
                                        RemainingItemsThresholdReachedCommand="{Binding MainWallPostThresholdExceedCommand}"                                  
                                        HeightRequest="{Binding Source={x:Reference Page},Path=Height,Converter={StaticResource AdjustPostSpace},ConverterParameter={StaticResource PostCollectionViewAdjustValue}}">
                            <CollectionView.ItemTemplate>
                                    <DataTemplate>
                                        <views:PostView Username="{Binding Username}"
                                                        TimeStamp="{Binding TimeStamp}"
                                                        PostTextContent="{Binding PostTextContent}"
                                                        PostLikeCount="{Binding PostLikeCount}"
                                                        ImageSource="{Binding ImageSource}"
                                                        ImagesBase64="{Binding ImagesBase64}"
                                                        PfpImageBase64="{Binding PfpImageBase64}"
                                                        PostId="{Binding PostId}"
                                                        NewCommentContent="{Binding NewCommentContent}"
                                                        Payload="{Binding Payload}"
                                                        DeleteButtonVisible="{Binding DeleteButtonVisible}"
                                                        PostProducts="{Binding PostProducts}"
                                                        PostContentVisible="{Binding PostContentVisible}"/>
                                    </DataTemplate>
                                </CollectionView.ItemTemplate>
                        </CollectionView>

                        

                    </VerticalStackLayout>
                    <Grid VerticalOptions="End" 
                          ZIndex="100"
                          HorizontalOptions="Center" BackgroundColor="Transparent" HeightRequest="100" WidthRequest="500"
                          IsVisible="{Binding WallPostLoadingActivityIndicatorVisible}">
                        <ActivityIndicator IsRunning="True"/>
                    </Grid>
                </Grid>

                <ScrollView BackgroundColor="{DynamicResource SideBackgroundColor}" 
                            HorizontalOptions="End" 
                            VerticalOptions="Start" 
                            VerticalScrollBarVisibility="Always" 
                            WidthRequest="300"
                            HeightRequest="{Binding Source={x:Reference Page},Path=Height,Converter={StaticResource AdjustPostSpace},ConverterParameter={StaticResource RightBarHeightAdjustValue}}" 
                            Grid.Column="2">
                    <!--friends-->
                    <VerticalStackLayout Padding="10" Spacing="5" x:Name="OnlineFriendList" 
                                         BindableLayout.ItemsSource="{Binding OnlineFriends}">
                        <BindableLayout.ItemTemplate>
                            <DataTemplate>
                                <views:OnlineFreidnListElementView Username="{Binding Username}"
                                                                   UserId="{Binding UserId}"
                                                                   AvatarImageSource="{Binding AvatarImageSource}"
                                                                   IsOnline="{Binding IsOnline}"/>
                            </DataTemplate>
                        </BindableLayout.ItemTemplate>
                    </VerticalStackLayout>
                </ScrollView>
            </Grid>




        </Grid>
        <Grid BackgroundColor="Transparent" VerticalOptions="Start" Margin="0,69,0,0" HorizontalOptions="Center" IsVisible="{Binding SearchPanelVisible}">
            <Grid>
                <Path Data="M 220 0 L 150 25 H 50 C 0 24.997 -0.001 24.997 0 75 V 450 C 0.011 499.992 0.011 500.023 50 500 H 750 C 799.999 499.991 799.999 499.991 800 450 V 75 C 799.965 25.995 799.965 25.995 750.468 25.956 L 650 25 L 590 0 H 220"
                      Fill="{DynamicResource MainBackgroundColorContrast}">
                </Path>
            </Grid>
            <Grid>
                <ScrollView HeightRequest="450" WidthRequest="780" BackgroundColor="Transparent" Margin="0,20,0,0">
                    <VerticalStackLayout Spacing="20" Padding="30" BindableLayout.ItemsSource="{Binding SearchResults}">
                        <BindableLayout.ItemTemplate>
                            <DataTemplate>
                                <views:UserSearchResultView Username="{Binding Username}"
                                                            Follows="{Binding Follows}"
                                                            Friends="{Binding Friends}"/>
                            </DataTemplate>
                        </BindableLayout.ItemTemplate>


                    </VerticalStackLayout>
                </ScrollView>
            </Grid>


            <Grid.Shadow>
                <Shadow Opacity="0.6 "
                        Brush="Black"/>
            </Grid.Shadow>
        </Grid>
        <Grid VerticalOptions="Start" 
              HorizontalOptions="Start" 
              Margin="46,72,0,0" 
              IsVisible="{Binding HubPanelVisible}"
              >
            <Grid BackgroundColor="Transparent" 
                  HeightRequest="301" 
                  WidthRequest="151">
                <Path Fill="{DynamicResource MainBackgroundColorContrast}" Data="M 75 0 L 60 25 H 25 C -3 25 0 22 0 49.772 V 275 C 0 303 -3 300 25 300 H 125 C 153 300 150 303 150 275 V 50 C 150 21 153 25 125 25 H 90 L 75 0"/>
            </Grid>
            <Grid BackgroundColor="Transparent" 
                  Margin="0,25,0,0" 
                  WidthRequest="145" 
                  HeightRequest="250">
                <VerticalStackLayout>
                    <Button CornerRadius="5" 
                            TextColor="{DynamicResource TextColor}" 
                            Text="Main" 
                            FontSize="20" 
                            FontAttributes="Bold" 
                            HeightRequest="50" 
                            BackgroundColor="{DynamicResource HubPanelBackground}" 
                            Command="{Binding ToMainViewCommand}"
                            >
                        <Button.GestureRecognizers>
                            <PointerGestureRecognizer PointerEntered="PointerGestureRecognizer_PointerEntered" PointerExited="PointerGestureRecognizer_PointerExited"/>
                        </Button.GestureRecognizers>
                        <!--<Button.Shadow>
                            <Shadow Opacity="0"
                Radius="50"/>
                        </Button.Shadow>-->
                    </Button>



                    <Button CornerRadius="5" TextColor="{DynamicResource TextColor}" Text="Profile" FontSize="20" FontAttributes="Bold" HeightRequest="50" BackgroundColor="{DynamicResource HubPanelBackground}" Command="{Binding ToProfileViewCommand}">
                        <Button.GestureRecognizers>
                            <PointerGestureRecognizer PointerEntered="PointerGestureRecognizer_PointerEntered" PointerExited="PointerGestureRecognizer_PointerExited"/>
                        </Button.GestureRecognizers>
                        <!--<Button.Shadow>
                            <Shadow Opacity="0"
                Radius="50"/>
                        </Button.Shadow>-->
                    </Button>



                    <Button CornerRadius="5" TextColor="{DynamicResource TextColor}" Text="Recipes"  FontSize="20" FontAttributes="Bold" HeightRequest="50" BackgroundColor="{DynamicResource HubPanelBackground}" Command="{Binding ToRecipesViewCommand}">
                        <Button.GestureRecognizers>
                            <PointerGestureRecognizer PointerEntered="PointerGestureRecognizer_PointerEntered" PointerExited="PointerGestureRecognizer_PointerExited"/>
                        </Button.GestureRecognizers>
                        <!--<Button.Shadow>
                            <Shadow Opacity="0"
                Radius="50"/>
                        </Button.Shadow>-->
                    </Button>





                    <Button CornerRadius="5" TextColor="{DynamicResource TextColor}" Text="Settings" FontSize="20" FontAttributes="Bold" HeightRequest="50" BackgroundColor="{DynamicResource HubPanelBackground}" Command="{Binding ToSettingViewCommand}">
                        <Button.GestureRecognizers>
                            <PointerGestureRecognizer PointerEntered="PointerGestureRecognizer_PointerEntered" PointerExited="PointerGestureRecognizer_PointerExited"/>
                        </Button.GestureRecognizers>
                        <!--<Button.Shadow>
                            <Shadow Opacity="0"
                                    Radius="50"/>
                        </Button.Shadow>-->
                    </Button>
                </VerticalStackLayout>
            </Grid>
            <Grid.Shadow>
                <Shadow Opacity="0.6 "
                        Brush="Black"/>
            </Grid.Shadow>
            <Grid.GestureRecognizers>
                <PointerGestureRecognizer PointerExitedCommand="{Binding HideHubPanelCommand}"/>
            </Grid.GestureRecognizers>
        </Grid>
        
        <Grid BackgroundColor="Transparent"
              HeightRequest="140" 
              WidthRequest="250" 
              HorizontalOptions="End"                          
              VerticalOptions="Start"                         
              Margin="0,-200,100,0">
            <popup:FailedActionNotificationPopup />
        </Grid>

        <Grid BackgroundColor="Transparent" IsVisible="{Binding InternetAcces}">
            <Grid BackgroundColor="Black" Opacity="0.4">

            </Grid>
            <VerticalStackLayout VerticalOptions="Center" HorizontalOptions="Center">
                <Label Text="No interntet connection" TextColor="{DynamicResource TextColor}"/>
                <ActivityIndicator IsRunning="True"/>
            </VerticalStackLayout>
        </Grid>

        <Grid IsVisible="{Binding AddPostFormVisible}">
            <Grid BackgroundColor="Black" Opacity="0.5">
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding HideAddPostFormCommand}"/>
                </Grid.GestureRecognizers>
            </Grid>
            <Frame HeightRequest="475" WidthRequest="700" BackgroundColor="{DynamicResource MainBackgroundColor}">
                <Grid>
                    <VerticalStackLayout Spacing="10" IsVisible="{Binding TagPickerVisible,Converter={StaticResource InverseBooleanConverter}}">
                        <Border Stroke="{Binding EditorBorderColor}" StrokeShape="RoundRectangle 10">
                            <Grid BackgroundColor="{DynamicResource EntryBackround}">
                                <Editor Text="{Binding PostContent,Mode=TwoWay}" 
                                        TextColor="{DynamicResource TextColor}" 
                                        HeightRequest="300" 
                                        Placeholder="Share your recipe here..." />
                            </Grid>
                        </Border>
                        <Grid>
                            <Button Text="Upload Images" TextColor="{DynamicResource TextColor}" BackgroundColor="{DynamicResource MainBackgroundColorContrast}" HorizontalOptions="Start" Command="{Binding UploadPostImagesCommand}"/>
                            <Button Text="Choose Tags" TextColor="{DynamicResource TextColor}" BackgroundColor="{DynamicResource MainBackgroundColorContrast}" HorizontalOptions="Center" Command="{Binding ChooseTagsCommand}"/>
                            <Button Text="Post" TextColor="{DynamicResource TextColor}" BackgroundColor="{DynamicResource MainBackgroundColorContrast}" HorizontalOptions="End" Command="{Binding AddPostCommand}"/>
                        </Grid>
                        <HorizontalStackLayout BindableLayout.ItemsSource="{Binding AddPostImages}" 
                                               BackgroundColor="Transparent" 
                                               WidthRequest="650" 
                                               HeightRequest="60"
                                               VerticalOptions="Center">
                            <BindableLayout.ItemTemplate>
                                <DataTemplate>
                                    <views:PostImageView ImageSource="{Binding ImageSource}"/>
                                </DataTemplate>
                            </BindableLayout.ItemTemplate>
                        </HorizontalStackLayout>
                    </VerticalStackLayout>

                    <VerticalStackLayout IsVisible="{Binding TagPickerVisible}" Spacing="10">
                        <Border BackgroundColor="Gray" StrokeShape="RoundRectangle 40">
                            <Grid BackgroundColor="{DynamicResource EntryBackround}" HeightRequest="40">
                                <Entry BackgroundColor="Transparent" TextColor="{DynamicResource TextColor}" Placeholder="Filter" Text="{Binding FilterParam,Mode=TwoWay}">
                                    <Entry.Behaviors>
                                        <toolkit:EventToCommandBehavior EventName="TextChanged" Command="{Binding FilterTagsCommand}"/>
                                    </Entry.Behaviors>
                                </Entry>
                            </Grid>
                        </Border>
                        <Border BackgroundColor="Gray" StrokeShape="RoundRectangle 10">
                            <ScrollView HeightRequest="200" VerticalScrollBarVisibility="Always" HorizontalScrollBarVisibility="Always">
                                <Grid>
                                    <toolkit:UniformItemsLayout BindableLayout.ItemsSource="{Binding Tags}"
                                                            MaxColumns="6" 
                                                            BackgroundColor="{DynamicResource EntryBackround}" 
                                                            Padding="15">
                                        <BindableLayout.ItemTemplate>
                                            <DataTemplate>
                                                <views:TagView Id="{Binding Id}" Name="{Binding Name}" FrameBackground="{Binding FrameBackground}"/>
                                            </DataTemplate>
                                        </BindableLayout.ItemTemplate>
                                    </toolkit:UniformItemsLayout>
                                    <ActivityIndicator IsRunning="True" IsVisible="{Binding TagsActivityIndicatorVisible}"/>
                                </Grid>
                            </ScrollView>
                        </Border>
                        <Button TextColor="{DynamicResource TextColor}" BackgroundColor="{DynamicResource MainBackgroundColorContrast}" Command="{Binding ApplyTagsCommand}" Text="Save"></Button>
                    </VerticalStackLayout>
                </Grid>
            </Frame>
            <Border IsVisible="{Binding NoTagsPickedNotifierVisible}" HeightRequest="475" WidthRequest="700" StrokeThickness="0" StrokeShape="RoundRectangle 10">
                <Grid BackgroundColor="#050505" Opacity="0.6" HeightRequest="475" WidthRequest="700">
                    <Label Text="You must pick 4 tags to post." TextColor="{DynamicResource TextColor}" HorizontalOptions="Center" VerticalOptions="Center"/>
                </Grid>
            </Border>
        </Grid>
        <Grid.GestureRecognizers>
            <TapGestureRecognizer Command="{Binding HideHubPanelCommand}" />
        </Grid.GestureRecognizers>
    </Grid>
</ContentPage>
